package imageCompare;


import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.comparison.ImageDiff;
import ru.yandex.qatools.ashot.comparison.ImageDiffer;

public class ImageCompare {

	public static void main(String[] args) throws IOException, InterruptedException 
	{
		//Initialize browser
		WebDriver driver;
		System.setProperty("webdriver.chrome.driver","C:\\Automation\\Workspace\\AutomationTestPOC\\jar\\chromedriver.exe");
		driver=new ChromeDriver();
        driver.manage().window().maximize();
        driver.navigate().to("https://the-internet.herokuapp.com/");
        
        
        //Get expected image based on xpath and store to a file
        WebElement imageElementExpected = driver.findElement(By.xpath("//body"));
        Screenshot imageScreenshotExpected = new AShot().takeScreenshot(driver, imageElementExpected);
        ImageIO.write(imageScreenshotExpected.getImage(),"png",new File("C:\\Automation\\Workspace\\AutomationTestPOC\\data\\Expected.png"));
        File f = new File("C:\\Automation\\Workspace\\AutomationTestPOC\\data\\Expected.png");
        if(f.exists())
        {
           System.out.println("Image File Captured");
         }
        else
        {
         System.out.println("Image File NOT exist");
        }
       
        //Get actual image based on xpath
        BufferedImage expectedImage = ImageIO.read(new File("C:\\Automation\\Workspace\\AutomationTestPOC\\data\\Expected.png"));
        Thread.sleep(3000);
        WebElement imageElementActual = driver.findElement(By.xpath("//body"));
        Screenshot imageScreenshotActual = new AShot().takeScreenshot(driver, imageElementActual);
        BufferedImage actualImage = imageScreenshotActual.getImage();
               
        //Compare with actual and expected image files
        ImageDiffer imgDiff = new ImageDiffer();
        ImageDiff diff = imgDiff.makeDiff(actualImage, expectedImage);
        if(diff.hasDiff()==true)
        {
         System.out.println("Images are Not Same");
        }
        else 
        {
         System.out.println("Images are Same");
        }
        
        //close driver
        driver.quit();

	}

}
